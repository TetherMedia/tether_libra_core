class LibraVMStatusError {
  LibraValidationStatusError validationStatusError;
  List<LibraVerificationStatusError> verificationStatusErrors;
  LibraInvariantViolationError invariantViolationError;
  LibraDeserializationError deserializationError;
  LibraExecutionError executionError;
  LibraErrorType errorType;

  @override
  String toString() {
    return 'LibraVMStatusError{validationStatusError: $validationStatusError, verificationStatusErrors: $verificationStatusErrors, invariantViolationError: $invariantViolationError, deserializationError: $deserializationError, executionError: $executionError, errorType: $errorType}';
  }

  LibraVMStatusError(this.errorType, this.validationStatusError, this.verificationStatusErrors,
      this.invariantViolationError, this.deserializationError, this.executionError);
}

enum LibraErrorType {
  ERRORTYPE_NOT_SET,
  VALIDATION,
  VERIFICATION,
  INVARIANT_VIOLATION,
  DESERIALIZATION,
  EXECUTION,
}

class LibraValidationStatusError {
  LibraValidationStatusCode code;
  String message;

  @override
  String toString() {
    return 'LibraValidationStatusError{code: $code, message: $message}';
  }

}

// copy of pb.VMValidationStatusCode
enum LibraValidationStatusCode {
  UNKNOWNVALIDATIONSTATUS,
  INVALIDSIGNATURE,
  INVALIDAUTHKEY,
  SEQUENCENUMBERTOOOLD,
  SEQUENCENUMBERTOONEW,
  INSUFFICIENTBALANCEFORTRANSACTIONFEE,
  TRANSACTIONEXPIRED,
  SENDINGACCOUNTDOESNOTEXIST,
  REJECTEDWRITESET,
  INVALIDWRITESET,
  EXCEEDEDMAXTRANSACTIONSIZE,
  UNKNOWNSCRIPT,
  UNKNOWNMODULE,
  MAXGASUNITSEXCEEDSMAXGASUNITSBOUND,
  MAXGASUNITSBELOWMINTRANSACTIONGASUNITS,
  GASUNITPRICEBELOWMINBOUND,
  GASUNITPRICEABOVEMAXBOUND,
}

class LibraVerificationStatusError {
  final LibraVerificationStatusKind status;
  final int moduleIndex;
  final LibraVerificationError error;
  final String message;

  @override
  String toString() {
    return 'LibraVerificationStatusError{status: $status, moduleIndex: $moduleIndex, error: $error, message: $message}';
  }

  LibraVerificationStatusError(this.status, this.moduleIndex,this.error, this.message);
}

enum LibraVerificationStatusKind {
  SCRIPT,
  MODULE,
}

enum LibraVerificationError {
  UNKNOWNVERIFICATIONERROR,
  INDEXOUTOFBOUNDS,
  RANGEOUTOFBOUNDS,
  INVALIDSIGNATURETOKEN,
  INVALID,
  RECURSIVESTRUCTDEFI,
  INVALIDRESOURCEFIELD,
  INVALIDFALLTHROUGH,
  JOINFAILURE,
  NEGATIVESTACKSIZEWITHINBLOCK,
  UNBALANCEDSTACK,
  INVALIDMAINFUNCTIONSIGNATURE,
  DUPLICATEELEMENT,
  INVALIDMODULEHANDLE,
  UNIMPLEMENTEDHANDLE,
  INCONSISTENTFIELDS,
  UNUSEDFIELDS,
  LOOKUPFAILED,
  VISIBILITYMISMATCH,
  TYPERESOLUTIONFAILURE,
  TYPEMISMATCH,
  MISSINGDEPENDENCY,
  POPREFERENCEERROR,
  POPRESOURCEERROR,
  RELEASEREFTYPEMISMATCHERROR,
  BRTYPEMISMATCHERROR,
  ASSERTTYPEMISMATCHERROR,
  STLOCTYPEMISMATCHERROR,
  STLOCUNSAFETODESTROYERROR,
  RETUNSAFETODESTROYERROR,
  RETTYPEMISMATCHERROR,
  FREEZEREFTYPEMISMATCHERROR,
  FREEZEREFEXISTSMUTABLEBORROWERROR,
  BORROWFIELDTYPEMISMATCHERROR,
  BORROWFIELDBADFIELDERROR,
  BORROWFIELDEXISTSMUTABLEBORROWERROR,
  COPYLOCUNAVAILABLEERROR,
  COPYLOCRESOURCEERROR,
  COPYLOCEXISTSBORROWERROR,
  MOVELOCUNAVAILABLEERROR,
  MOVELOCEXISTSBORROWERROR,
  BORROWLOCREFERENCEERROR,
  BORROWLOCUNAVAILABLEERROR,
  BORROWLOCEXISTSBORROWERROR,
  CALLTYPEMISMATCHERROR,
  CALLBORROWEDMUTABLEREFERENCEERROR,
  PACKTYPEMISMATCHERROR,
  UNPACKTYPEMISMATCHERROR,
  READREFTYPEMISMATCHERROR,
  READREFRESOURCEERROR,
  READREFEXISTSMUTABLEBORROWERROR,
  WRITEREFTYPEMISMATCHERROR,
  WRITEREFRESOURCEERROR,
  WRITEREFEXISTSBORROWERROR,
  WRITEREFNOMUTABLEREFERENCEERROR,
  INTEGEROPTYPEMISMATCHERROR,
  BOOLEANOPTYPEMISMATCHERROR,
  EQUALITYOPTYPEMISMATCHERROR,
  EXISTSRESOURCETYPEMISMATCHERROR,
  BORROWGLOBALTYPEMISMATCHERROR,
  BORROWGLOBALNORESOURCEERROR,
  MOVEFROMTYPEMISMATCHERROR,
  MOVEFROMNORESOURCEERROR,
  MOVETOSENDERTYPEMISMATCHERROR,
  MOVETOSENDERNORESOURCEERROR,
  CREATEACCOUNTTYPEMISMATCHERROR,
  MODULEADDRESSDOESNOTMATCHSENDER,
  NOMODULEHANDLES,
}

enum LibraInvariantViolationError {
  UNKNOWNINVARIANTVIOLATIONERROR,
  OUTOFBOUNDSINDEX,
  OUTOFBOUNDSRANGE,
  EMPTYVALUESTACK,
  EMPTYCALLSTACK,
  PCOVERFLOW,
  LINKERERROR,
  LOCALREFERENCEERROR,
  STORAGEERROR,
}

// copy of pb.BinaryError
enum LibraDeserializationError {
  UNKNOWNBINARYERROR,
  MALFORMED,
  BADMAGIC,
  UNKNOWNVERSION,
  UNKNOWNTABLETYPE,
  UNKNOWNSIGNATURETYPE,
  UNKNOWNSERIALIZEDTYPE,
  UNKNOWNOPCODE,
  BADHEADERTABLE,
  UNEXPECTEDSIGNATURETYPE,
  DUPLICATETABLE,
}

// copy of pb.ExecutionStatus
class LibraExecutionError {
  LibraExecutionErrorType errorType;

  @override
  String toString() {
    return 'LibraExecutionError{errorType: $errorType}';
  }

}

enum LibraExecutionErrorType {
  EXECUTIONSTATUS_NOT_SET,
  RUNTIME_STATUS,
  ASSERTION_FAILURE,
  ARITHMETIC_ERROR,
  REFERENCE_ERROR,
}
